diff --git a/src/EventSubscriber/CheckVerifiedUserSubscriber.php b/src/EventSubscriber/CheckVerifiedUserSubscriber.php
index c71a1707..f6842cc6 100644
--- a/src/EventSubscriber/CheckVerifiedUserSubscriber.php
+++ b/src/EventSubscriber/CheckVerifiedUserSubscriber.php
@@ -5,6 +5,8 @@ namespace App\EventSubscriber;
 use App\Entity\User;
 use App\Repository\AccountNotVerifiedAuthenticationException;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Symfony\Component\HttpFoundation\RedirectResponse;
+use Symfony\Component\Routing\RouterInterface;
 use Symfony\Component\Security\Core\Exception\AccessDeniedException;
 use Symfony\Component\Security\Core\Exception\AuthenticationException;
 use Symfony\Component\Security\Core\Exception\CustomUserMessageAuthenticationException;
@@ -14,6 +16,13 @@ use Symfony\Component\Security\Http\Event\LoginFailureEvent;
 
 class CheckVerifiedUserSubscriber implements EventSubscriberInterface
 {
+    private RouterInterface $router;
+
+    public function __construct(RouterInterface $router)
+    {
+        $this->router = $router;
+    }
+
     public function onCheckPassport(CheckPassportEvent $event)
     {
         $passport = $event->getPassport();
@@ -36,6 +45,11 @@ class CheckVerifiedUserSubscriber implements EventSubscriberInterface
         if (!$event->getException() instanceof AccountNotVerifiedAuthenticationException) {
             return;
         }
+
+        $response = new RedirectResponse(
+            $this->router->generate('app_verify_email')
+        );
+        $event->setResponse($response);
     }
 
     public static function getSubscribedEvents()
