diff --git a/src/Controller/AdminController.php b/src/Controller/AdminController.php
index 3ec2fcfc..b284be56 100644
--- a/src/Controller/AdminController.php
+++ b/src/Controller/AdminController.php
@@ -13,7 +13,7 @@ class AdminController extends AbstractController
     /**
      * @Route("/admin", name="admin_dashboard")
      */
-    public function dashboard(ChartBuilderInterface $chartBuilder): \Symfony\Component\HttpFoundation\Response
+    public function dashboard(ChartBuilderInterface $chartBuilder): Response
     {
         $chart = $chartBuilder->createChart(Chart::TYPE_LINE);
         $chart->setData([
@@ -58,7 +58,7 @@ class AdminController extends AbstractController
     /**
      * @Route("/admin/login")
      */
-    public function adminLogin(): \Symfony\Component\HttpFoundation\Response
+    public function adminLogin(): Response
     {
         return new Response('Pretend admin login page, that should be public');
     }
@@ -66,7 +66,7 @@ class AdminController extends AbstractController
     /**
      * @Route("/admin/comments")
      */
-    public function adminComments(): \Symfony\Component\HttpFoundation\Response
+    public function adminComments(): Response
     {
         $this->denyAccessUnlessGranted('ROLE_COMMENT_ADMIN');
 
diff --git a/src/Controller/QuestionController.php b/src/Controller/QuestionController.php
index c0079759..4a60ba5b 100644
--- a/src/Controller/QuestionController.php
+++ b/src/Controller/QuestionController.php
@@ -28,7 +28,7 @@ class QuestionController extends AbstractController
     /**
      * @Route("/{page<\d+>}", name="app_homepage")
      */
-    public function homepage(QuestionRepository $repository, int $page = 1): \Symfony\Component\HttpFoundation\Response
+    public function homepage(QuestionRepository $repository, int $page = 1): Response
     {
         $queryBuilder = $repository->createAskedOrderedByNewestQueryBuilder();
 
@@ -45,7 +45,7 @@ class QuestionController extends AbstractController
      * @Route("/questions/new")
      * @IsGranted("ROLE_USER")
      */
-    public function new(): \Symfony\Component\HttpFoundation\Response
+    public function new(): Response
     {
         return new Response('Sounds like a GREAT feature for V2!');
     }
@@ -53,7 +53,7 @@ class QuestionController extends AbstractController
     /**
      * @Route("/questions/{slug}", name="app_question_show")
      */
-    public function show(Question $question): \Symfony\Component\HttpFoundation\Response
+    public function show(Question $question): Response
     {
         if ($this->isDebug) {
             $this->logger->info('We are in debug mode!');
@@ -67,7 +67,7 @@ class QuestionController extends AbstractController
     /**
      * @Route("/questions/edit/{slug}", name="app_question_edit")
      */
-    public function edit(Question $question): \Symfony\Component\HttpFoundation\Response
+    public function edit(Question $question): Response
     {
         $this->denyAccessUnlessGranted('EDIT', $question);
 
@@ -79,7 +79,7 @@ class QuestionController extends AbstractController
     /**
      * @Route("/questions/{slug}/vote", name="app_question_vote", methods="POST")
      */
-    public function questionVote(Question $question, Request $request, EntityManagerInterface $entityManager): \Symfony\Component\HttpFoundation\Response
+    public function questionVote(Question $question, Request $request, EntityManagerInterface $entityManager): Response
     {
         $direction = $request->request->get('direction');
 
diff --git a/src/Controller/RegistrationController.php b/src/Controller/RegistrationController.php
index 829f0a90..00d0e56e 100644
--- a/src/Controller/RegistrationController.php
+++ b/src/Controller/RegistrationController.php
@@ -10,7 +10,6 @@ use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Routing\Annotation\Route;
-use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
 use SymfonyCasts\Bundle\VerifyEmail\Exception\VerifyEmailExceptionInterface;
 use SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelperInterface;
 
@@ -93,7 +92,7 @@ class RegistrationController extends AbstractController
     /**
      * @Route("/verify/resend", name="app_verify_resend_email")
      */
-    public function resendVerifyEmail(): \Symfony\Component\HttpFoundation\Response
+    public function resendVerifyEmail(): Response
     {
         return $this->render('registration/resend_verify_email.html.twig');
     }
diff --git a/src/Factory/UserFactory.php b/src/Factory/UserFactory.php
index 030475f2..cf61838c 100644
--- a/src/Factory/UserFactory.php
+++ b/src/Factory/UserFactory.php
@@ -4,7 +4,6 @@ namespace App\Factory;
 
 use App\Entity\User;
 use App\Repository\UserRepository;
-use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
 use Zenstruck\Foundry\ModelFactory;
 use Zenstruck\Foundry\Proxy;
 use Zenstruck\Foundry\RepositoryProxy;
diff --git a/src/Kernel.php b/src/Kernel.php
index 5e775f6d..4e416570 100644
--- a/src/Kernel.php
+++ b/src/Kernel.php
@@ -7,7 +7,6 @@ use Symfony\Component\Config\Loader\LoaderInterface;
 use Symfony\Component\Config\Resource\FileResource;
 use Symfony\Component\DependencyInjection\ContainerBuilder;
 use Symfony\Component\HttpKernel\Kernel as BaseKernel;
-use Symfony\Component\Routing\RouteCollectionBuilder;
 
 class Kernel extends BaseKernel
 {
diff --git a/src/Security/LoginFormAuthenticator.php b/src/Security/LoginFormAuthenticator.php
index 5ef70036..dd9d5767 100644
--- a/src/Security/LoginFormAuthenticator.php
+++ b/src/Security/LoginFormAuthenticator.php
@@ -9,10 +9,8 @@ use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Session\SessionInterface;
 use Symfony\Component\Routing\Generator\UrlGeneratorInterface;
 use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
-use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
 use Symfony\Component\Security\Core\Exception\AuthenticationException;
 use Symfony\Component\Security\Core\Exception\InvalidCsrfTokenException;
-use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
 use Symfony\Component\Security\Core\Security;
 use Symfony\Component\Security\Core\User\UserInterface;
 use Symfony\Component\Security\Core\User\UserProviderInterface;
